<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xinmao.sc.testCenter.mapper.TestScaleNormMapper" >

  <resultMap id="BaseResultMap" type="com.xinmao.sc.testCenter.domain.TestScaleNormMessage" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="relateTestScaleId" property="relateTestScaleId" jdbcType="INTEGER" />
    <result column="dimensionId" property="dimensionId" jdbcType="INTEGER" />
    <result column="populationRangeId" property="populationRangeId" jdbcType="INTEGER" />
    <result column="lowScore" property="lowScore" jdbcType="FLOAT" />
    <result column="highScore" property="highScore" jdbcType="FLOAT" />
    <result column="averageValue" property="averageValue" jdbcType="FLOAT" />
    <result column="standardDeviation" property="standardDeviation" jdbcType="FLOAT" />
    <result column="is_enable" property="isEnable" jdbcType="INTEGER" />
    <result column="is_delete" property="isDelete" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    id,relateTestScaleId,dimensionId,populationRangeId,lowScore,highScore,averageValue,standardDeviation,is_enable,is_delete,create_time,update_time
  </sql>

  <select id="selectAll" resultMap="BaseResultMap">
    select 
          <include refid="Base_Column_List"/>
    from testscalenorm 
    <where>
        is_delete = 0
      <if test="relateTestScaleId != null">
        and relateTestScaleId = #{relateTestScaleId,jdbcType=INTEGER}
      </if>
      <if test="dimensionId != null">
        and dimensionId = #{dimensionId,jdbcType=INTEGER}
      </if>
      <if test="populationRangeId != null">
        and populationRangeId = #{populationRangeId,jdbcType=INTEGER}
      </if>
    </where>
    order by update_time desc
  </select>
  
  <select id="getMessById" resultMap="BaseResultMap" parameterType="int">
   select 
          <include refid="Base_Column_List"/>
   from 
        testscalenorm  
    where  is_delete = 0 and 
    id = #{id,jdbcType=INTEGER}
    order by update_time desc  
  </select>
  
  <insert id="insertMess" useGeneratedKeys="true" keyProperty="id" parameterType="com.xinmao.sc.testCenter.domain.TestScaleNormMessage" >
    insert into testscalenorm
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="relateTestScaleId != null" >
        relateTestScaleId,
      </if>
      <if test="dimensionId != null" >
        dimensionId,
      </if>
      <if test="populationRangeId != null" >
        populationRangeId,
      </if>
      <if test="lowScore != null" >
        lowScore,
      </if>
      <if test="highScore != null" >
        highScore,
      </if>
      <if test="averageValue != null" >
        averageValue,
      </if>
      <if test="standardDeviation != null" >
        standardDeviation,
      </if>
      <if test="isEnable != null" >
        is_enable,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="relateTestScaleId != null" >
        #{relateTestScaleId,jdbcType=INTEGER},
      </if>
      <if test="dimensionId != null" >
        #{dimensionId,jdbcType=INTEGER},
      </if>
      <if test="populationRangeId != null" >
        #{populationRangeId,jdbcType=INTEGER},
      </if>
      <if test="lowScore != null" >
        #{lowScore,jdbcType=FLOAT},
      </if>
      <if test="highScore != null" >
        #{highScore,jdbcType=FLOAT},
      </if>
      <if test="averageValue != null" >
        #{averageValue,jdbcType=FLOAT},
      </if>
      <if test="standardDeviation != null" >
        #{standardDeviation,jdbcType=FLOAT},
      </if>
      <if test="isEnable != null" >
        #{isEnable,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  
    <update id="updateMess" parameterType="com.xinmao.sc.testCenter.domain.TestScaleNormMessage" >
    update testscalenorm
    <set >
      <if test="relateTestScaleId != null" >
        relateTestScaleId = #{relateTestScaleId,jdbcType=INTEGER},
      </if>
      <if test="dimensionId != null" >
        dimensionId = #{dimensionId,jdbcType=INTEGER},
      </if>
      <if test="populationRangeId != null" >
        populationRangeId = #{populationRangeId,jdbcType=INTEGER},
      </if>
      <if test="lowScore != null" >
        lowScore = #{lowScore,jdbcType=FLOAT},
      </if>
      <if test="highScore != null" >
        highScore = #{highScore,jdbcType=FLOAT},
      </if>
      <choose>  
             <when test="averageValue != null">averageValue = #{averageValue,jdbcType=FLOAT},</when>  
             <when test="averageValue == null">averageValue = null,</when>  
      </choose>
      <choose>  
             <when test="standardDeviation != null">standardDeviation = #{standardDeviation,jdbcType=FLOAT},</when>  
             <when test="standardDeviation == null">standardDeviation = null,</when>  
      </choose>
      <!--  
      <if test="averageValue != null" >
        averageValue = #{averageValue,jdbcType=FLOAT},
      </if>
      <if test="averageValue == null" >
        averageValue = null,
      </if>
      <if test="standardDeviation != null" >
        standardDeviation = #{standardDeviation,jdbcType=FLOAT},
      </if>
      <if test="standardDeviation == null" >
        standardDeviation = null,
      </if>
      -->
      <if test="isEnable != null" >
        is_enable = #{isEnable,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER} and is_delete = 0
  </update>
  
  
   <update id="batchDeleteMessById" parameterType="com.xinmao.sc.testCenter.domain.TestScaleNormMessage" >
    update testscalenorm
    <set >
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
       where dimensionId = #{dimensionId,jdbcType=INTEGER} and is_delete = 0
  </update>
  
  
   <update id="batchDeleteMessByTestScaleId" parameterType="com.xinmao.sc.testCenter.domain.TestScaleNormMessage" >
    update testscalenorm
    <set >
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
       where relateTestScaleId = #{relateTestScaleId,jdbcType=INTEGER} and is_delete = 0
  </update>
  
  
  <update id="batchDeleteMessByPopulationRangeId" parameterType="com.xinmao.sc.testCenter.domain.TestScaleNormMessage" >
    update testscalenorm
    <set >
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
       where 
        is_delete = 0 and
        populationRangeId in
        <foreach item="item" index="index" collection="searchList"  
                 open="(" separator="," close=")">  
            #{item}  
        </foreach>  
  </update>
  
</mapper>
